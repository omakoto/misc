# Run it with .

set +x

my_name="${0##*/}"
if [[ "$my_name" == bash-profile-start ]] ; then
    echo "Use \`. $my_name\` instead."
#    exit 1
fi

# Enable -x, and process the trace output with perl and calculate
# the timestamp delta and prints it.

cat <<'EOF'

** Profiling started. Use `profile-stop` to stop **

EOF

profile-stop() {
    set +x
}

profile-restart() {
    echo "@@PROFILE-RESTART@@"
}

PS4='+: '

read -r -d '' S <<'__END_OF_SCRIPT__'
#line 31
use Time::HiRes qw(time);

BEGIN {
    $start = -1;
    $last = -1;
    $command = "";
    $nest = "";
}

if (m!\@\@PROFILE-RESTART\@\@!) {
    $start = -1;
    $last = -1;
}

if (m!^(\++\:) (.*)!s) {
    $c1 = $1;
    $c2 = $2;

    $time = time();
    if ($start < 0) {
        $start = $time;
    }
    if ($last < 0) {
        $last = $time;
    }
    printf("%.6f   +%.6f: $nest $command", $time - $last, $time - $start);
    $last = $time;

    $nest = $c1;
    $command = $c2;
} else {
    $command .= $_;
}
__END_OF_SCRIPT__

#echo "$S"
# perl -pe "$S"

exec 9> >( perl -ne "$S" )
BASH_XTRACEFD=9

set -x # Print command line before executing
