#!/bin/bash

# Used with bind -x as eval "$(bash-move-current-token-file)"
# Take the current token as a filename, let rename it and update
# the command line.
# if -c is passed, it'll copy the file instead

set -e

. mutil.sh

copy=0
if [[ "$1" == -c ]] ; then
    copy=1
fi

# Current token.
from="$(sh-get-current-token -f)"

if [[ -z "$from" ]] ; then
  # No token.
  exit 0
fi

echo "$from" 1>&2

if [[ ! -e "$from" ]]; then
  echo "$from doesn't exist." 1>&2
  exit 1
fi

# Temp file to store the filename.
temp=$(tempfile)
trap "rm -f $temp" EXIT

{
    if (( $copy )) ; then
      echo "# Copying $from"
    else
      echo "# Renaming $from"
    fi
    echo "$from"
} > $temp

# Let the user edit it.
1 -w $temp >/dev/null

# Get the updated name. TODO It doesn't handle spaces properly.
to=$(grep -v '^#' "$temp")

# Has it changed?
if [[ -z "$to" ]] || [[ "$to" = "$from" ]]; then
  exit 0
fi

# Error check
if [[ -e "$to" ]]; then
  echo "$to already exists." 1>&2
  exit 1
fi

# Rename or copy
mkdir -p "$(dirname "$to")"
if (( $copy )) ; then
    ee -2 cp "$from" "$to"
else
    ee -2 mtv "$from" "$to"
fi

# Update the command line.
sh-replace-current-token -e "$to"
