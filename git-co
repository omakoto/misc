#!/bin/bash

. mutil.sh

in-git -e || exit 2

root=$(git root)
cd "$root"

histfile="$HOME/cbin/temp/git-messages/$(date '+%Y-%m-%d/git-message-%H-%M-%S').txt"

pre_commit="$(git rev-parse HEAD 2>/dev/null)"

show_commit() {
    git show --no-patch
}

print_description() {
    post_commit="$(git rev-parse HEAD 2>/dev/null)"

    if [[ "$pre_commit" == "$post_commit" ]] ; then
        COLOR_OUT=2 INFO "No commit made."
    else
        COLOR_OUT=2 INFO "Message was:"
        show_commit

        # Also copy to temp folder
        mkdir -p "${histfile%/*}"
        {
            echo "# Directory: $(pwd)"
            echo "# Branch: $(git current-branch)"
            show_commit | sed -e 's/^/# /; s/^#     //' # Remove the extra spaces in the message
        } > "$histfile"
        COLOR_OUT=2 INFO "Message copied to: "$histfile""
    fi
}

trap print_description EXIT

git commit "${@}"
rc=$?

INFO "Git commit finished with status $rc"

# print_description

exit $?
