
function command_not_found_handle() {
    . "$BASH_SOURCE" || return 99
    command_not_found_handle_raw "$@"
}

function command_not_found_handle_raw_ee() {
    ee -m "[command_not_found_handle] Running" "$@"
}

function command_not_found_handle_raw() {
    local command="$1"

    # Auto git checkout.
    if is-git-branch "$command" ; then
        command_not_found_handle_raw_ee git checkout "$command"
        return $?
    fi

# Doesn't work -- bash won't call it if the command contains /s.
#    if [[ "$command" =~ ^(https?|file):// ]]; then
#        c "$command"
#        return 0
#    fi

#    # Try to add +x, but it doesn't work because this hook isn't called.
#    if x "$command" ; then
#        return 0
#    fi

    if [[ "$(type -t "@$command")" == function ]] ; then
        command_not_found_handle_raw_ee "@$command"
        return $?
    fi


    if [[ "$command" =~ ^test[A-Z] ]] ; then
        command_not_found_handle_raw_ee a "$command"
        return $?
    fi

    echo "bash: $command: command not found. (update file://$BASH_SOURCE to add a handler)"
    return 127
}
