#!/bin/bash

set -e
. mutil.sh

tokens=("$@")

# First, select the tokens to replace
select_tokens() {
    local tokens=("$@")
    local t
    local i=0

    for t in "${tokens[@]}" ; do
        echo "$i" "$t"
        i=$(( $i + 1 ))
    done | fzf --tac --multi --with-nth=2.. | cut -f 1 -d ' '
}

selected=( $(select_tokens "${tokens[@]}") )

# Then, for each selected tokens, try fullpathfy / envify

# helper
recent_dirs=""
get_recent_dirs() {
    if [[ "$recent_dirs" == "" ]] ; then
        recent_dirs="$(recent-dirs -n 20)"
    fi
    echo $recent_dirs
}

col() {
    hl ' #.*' '@333' '\$\{.*?\}' '@253'
}

set +e
for i in "${selected[@]}" ; do
    t="${tokens[$i]}"
    replaced="$({
        # Show the original
        echo "$t # Original"

        # If it's a relpath, show the abspath
        if [[ "$t" =~ ^/ ]] ; then
            abs="$t"
        elif [[ -e "$t" ]] ; then
            abs=$(realpath -s "$t")
            echo "$abs # Absolute path"
        fi

        # If we have an abspath, try replacing with env
        if [[ "$abs" != "" ]] ; then
            replace-with-env <<< "$abs" | tac
        fi

        # If the token doesn't exist as a file, then see if it exists in any recent dirs
        if ! [[ -e "$t" ]] ; then
            for rd in $(get_recent_dirs); do
                if [[ -e "$rd$t" ]] ; then
                    echo "$(realpath -s "$rd$t") # Relative from $rd"
                fi
            done
        fi

    } | global-unique | col | fzf -1 --ansi | sed -e 's! #.*$!!')"

    if [[ "$replaced" != "" ]] ; then
        tokens[$i]="$replaced"
    fi
done

echo "${tokens[@]}"
