#!/bin/bash

set -e

. mutil.sh

which xclip >&/dev/null || {
  echo "$0: Error: the xclip command not found." 1>&2
  exit 1
}

function usage() {
  cat <<EOF

  $0: Copy or paste to/from the clipboard.

  Usage: $0 [flags] [command]

    If [command] is specified, excute the command with connecting
    stdin/stdout to the clipboard.

EOF
}

quiet=0
copy=0
no_cutlf=0
dump=0
target_opt=""
flags=""
flatten=0
description=""

eval "$(bashgetopt -u usage '
  i|copy        copy=1                      # Copy from STDIN.  Default behavior if STDIN is not terminal
  q|quiet       quiet=1; flags="$flags -q"  # Quiet
  n|no-cut-lf   no_cutlf=1                  # Don'\''t drop the new line even if the input is a single line
  d|print       dump=1; flags="$flags -d"   # Dump copied content to STDOUT.
  t|target-type target_opt="-t %"           # Specify TARGET, such as TEXT, UTF8_STRING, or text/html
  f|flatten     flatten=1                   # When pasting, collapse multiple lines into single line.
  D|description=s description=%             # Set what to show on console.
' "$@")"

if (( $# > 0 )) ; then
  eeopts=""
  if (( $quiet )) ; then
    eeopts=-q
  fi
  $0 $flags | ee -2 $eeopts "$@" | $0 $flags
  exit ${PIPESTATUS[1]}
fi

if (( $copy )) || [[ ! -t 0 ]] ; then
  # Copy from stdin.
  # First, read all the content and write to a temp file, so that
  # "cb | FILTER | cb" would work.
  f=/tmp/cb-$$.dat
  {
    if (( $no_cutlf )) ; then
      cat
    else
      trim-if-oneline
    fi
  } >$f
  if (( $dump )) ; then
    cat $f
  fi
  (
    (
      cat "$f" | {
        if ! iswsl ; then
          xclip -silent -i -selection clipboard $target_opt
        else
          clip.exe # for wsl
        fi
      }
      rm "$f"
    ) &
  ) # <&- 1>&- 2>&- # what's this???
  (( $quiet )) || echo "${description:-[Copied to clipboard]}" 1>&2
  exit 0
fi
{
  if ! iswsl ; then
    xclip -o -selection clipboard $target_opt
  else
    powershell.exe -command "Get-Clipboard" # for wsl
  fi
} | {
  if (( $flatten )) ; then
    shescapes
  else
    cat
  fi
}
