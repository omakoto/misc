#!/bin/bash

set -e
. <(zenlog -s)

: ${FILE_RE_CHARS:=A-Za-z0-9\-\,\.\/\%\_\+\@\~\$\{\}}
export FILE_RE_CHARS

zenlog_fail_if_not_in_zenlog || exit 1

num=10
TEXT_ONLY=0

eval "$(getopt.pl -d 'Show filename-like strings from recent zenlog logs.' '
n:  num=%        # Use recent NUM log files. (N <= 10).
t   TEXT_ONLY=1  # Show text files only.
' "$@")"

export TEXT_ONLY
export SCRIPT_DIR="${0%/*}"

# Use zenlog-contents instead of cat to exclude prompts
zenlog-last-n-contents -R -n $num  | perl -w  <(cat <<'EOF'
#line 22

BEGIN {
  # Load modules from the script directory.
  push @INC, $0 =~ s!/[^/]+$!!r; #!
}

use strict;
use IsFile;

$| = 1;

my $text_only = $ENV{TEXT_ONLY};

sub tokenize {
  my ($line) = @_;

  $line =~ s![^$ENV{FILE_RE_CHARS}]! !go;
  for my $tok (split /\s+/, $line) {
    if (isfile($tok)) {
      my $text = -T $tok;
      if ($text_only && !$text) {
        next;
      }

      print $tok, "\n";
    }
  }
}

while (<>) {
  chomp;
  if (/^Running\: (.*)/) {
    # Special case for command lines from "ee".
    print "$1\n";
    tokenize $1;
  } else {
    tokenize $_;
  }
}
EOF
) | global-unique | fzf +s -m --ansi | tr '\n' ' '
