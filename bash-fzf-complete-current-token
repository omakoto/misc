#!/bin/bash

. mutil.sh

test=0
if [[ -t 1 ]] ; then
  test=1
fi

if (( $test )) ; then
  export token="$1"
else
  export token="$(sh-get-current-token -f)"
fi


expand() {
  local IFS=$'\n'
  echo "$*"
}

s() {
  sort --ignore-case
}

get_dir() {
  if [[ -d "$token" ]] ; then
    echo "$token"
  else
    echo "$(dirname "$token")"
  fi
}

candidate_files() {
  (
    shopt -s nullglob

    if ! [[ "$token" =~ / ]] ; then
      command ls -A
    else
      local dir="$(get_dir)"
      expand "$dir"/*
    fi
  ) | sort | while read -r n; do
    echo -n "[FILES] $n"
    if [[ -d "$n" ]] ; then
      echo "/"
    else
      echo ''
    fi
  done
}

bfs_files() {
  {
    opts="-nocolor -maxdepth 4 -name .git -prune -o -name e2etests -prune -o -print "
    if ! [[ "$token" =~ / ]] ; then
      timeout 0.1 bfs $opts | sed -e 's!^\./!!'
    else
      local dir="$(get_dir)"
      timeout 0.1 bfs $opts "$dir"
    fi
  } 2>/dev/null
}

maybe_escape() {
  while read -r word ; do
    if [[ "$word" =~ ^\$ ]] ; then
      echo "$word"
    else
      shescape "$word"
    fi
  done
}

maybe_add_space() {
  while read -r word ; do
    echo -n "$word"
    if [[ -f "$word" ]] ; then
      echo " "
    else
      echo
    fi
  done
}

completed=$(
    {
        cat <(
          if in-git ; then
            # Git branches
            git branch | s | sed -n '/^..(/d; s/^. /[GIT-BRANCH] /p;'
          fi
        )

        timeout 1 cat <(
          candidate_files
        )

        # Recent directories
        cat <(
          timeout 0.5 recent-dirs -n 50 -z | s | perl -ne 'chomp; print "[RECENT-DIR] ", $_, "/\n"'
        )

        (
          if [[ "$ANDROID_BUILD_TOP" ]] ; then
            cat <<'EOF'
$ANDROID_BUILD_TOP/build/soong/
$ANDROID_BUILD_TOP/cts/
$ANDROID_BUILD_TOP/frameworks/base/
$ANDROID_BUILD_TOP/out/
$ANDROID_BUILD_TOP/out/soong/.intermediates/
$ANDROID_HOST_OUT/
EOF
          fi
          env | sed -e 's/=.*//' | s
        ) | global-unique | perl -pe 'print "[ENV] \$"'

        # Filenames in recent logs
        cat <(
          ztimeout 0.3 enlog-recent-files -d | global-unique | head -100 | s | dir-slash | perl -pe 'print "[RECENT-file] "'
        )

        # Recent words in zenlog
        cat <(
          timeout 0.3 zenlog-last-n-contents -R -n 5 | zenlog-recent-words.pl | global-unique | head -1000 | s | perl -pe 'print "[RECENT-WORD] "'
        )

        # Breath-first files
        cat <(bfs_files| s | perl -pe 'print "[BFS] "')
    } 2>/dev/null |
    nobuf tr -s / /|
    nobuf tee /tmp/fzf-in.txt |
    fzf -1 -q "$token" -m --preview='preview-file {2..}' |
      perl -pe 's!^\S+\s*!!; s!^.*\{\{\s*(.*?)\s*\}\}.*$!\1!' |
      maybe_escape |
      maybe_add_space |
      add-backslash-except-for-last
)

if [[ -n "$completed" ]] ; then
  if (( $test )) ; then
    echo "'$completed'"
  else
    sh-replace-current-token "$completed"
  fi
fi
