#!/bin/bash

. mutil.sh

adb=0

eval "$(getopt.pl -Nx '
a|adb adb=1 # Complete with android device files.
' "$@")"

token="$(sh-get-current-token -f)"

env_expansion=0
shescapes=shescapes

if [[ "$token" = \$* ]] ; then
  env_expansion=1
  shescapes=cat
fi

gitroot="$(git rev-parse --show-toplevel 2>/dev/null)"

maybe_escape() {
  word="$(cat)"
  if [[ "$word" =~ ^\$ ]] ; then
    echo "$word"
  else
    shescape "$word"
  fi
}

completed=$(
    {
      if (( $env_expansion )) ; then
        # Env names.
        env | sed -e 's!^![ENV] $!; s!=.*!!'

      else
        if in-git ; then
          # Git branches
          git branch | sed -n '/^..(/d; s/^. /[GIT-BRANCH] /p;'
        fi

        cat <<'EOF' | sed -e 's/^/[ANDROID-ENV] /'
$ANDROID_BUILD_TOP/
$ANDROID_BUILD_TOP/build/soong/
$ANDROID_BUILD_TOP/cts/
$ANDROID_BUILD_TOP/frameworks/base/
$ANDROID_BUILD_TOP/out/
$ANDROID_BUILD_TOP/out/soong/.intermediates/
$ANDROID_HOST_OUT/
$OUT/
EOF

#        if in-repo ; then
#            repo-upstream | perl -pe 'print "[REPO-BRANCH] "'
#            repo-active-dirs | perl -pe 'print "[REPO-DIR] "' # slow
#        fi

        # if in-git ; then
        #   (
        #     cd "$gitroot"
        #     # Git changed files
        #     git status -s |
        #         perl -pe "
        #         s!^\s* (A|\?\?) \s*![GIT-CHANGED-ADD] $gitroot/!ix;
        #         s!^\s* D \s*![GIT-CHANGED-DEL] $gitroot/!ix;
        #         s!^\s* M \s*![GIT-CHANGED-MOD] $gitroot/!ix;
        #         " | sort

        #     # Repo changed files
        #     rp -qR |
        #         perl -pe "
        #         s!^\s* A\S* \s*![REPO-CHANGED-ADD] $gitroot/!ix;
        #         s!^\s* D\S* \s*![REPO-CHANGED-DEL] $gitroot/!ix;
        #         s!^\s* M\S* \s*![REPO-CHANGED-MOD] $gitroot/!ix;
        #         s!^\s* T\S* \s*![REPO-CHANGED-CHN] $gitroot/!ix;
        #         s!^\s* C\S* \s*![REPO-CHANGED-CPY] $gitroot/!ix;
        #         " | sort
        #   )
        # fi

        # Filenames in recent logs
        zenlog-recent-files -d | global-unique | dir-slash | sed 's/^/[RECENT-FILE] /'

        # Android build modules
        # TODO This needs to switch to jq
#       android-module-list -q | perl -pe 'print "[AND-MODULE] "'

        # Android packages
# make sure it's fast
        android-list-apps -n | perl -pe 'print "[AND-PACKAGE] "'

        # Android device files
#        bash-fzf-complete-current-token-android-helper "${token}"

        # Git tags
#        git tag | perl -pe 'print "[GIT-TAG] "'

        # Recent directories
        recent-dirs | perl -ne 'chomp; print "[RECENT-DIR] ", $_, "/\n"'

        # Executable files.
#        list-commands-in-path | perl -pe 'print "[EXE] "'

        # Recent words in zenlog
       zenlog-last-n-contents -R -n 10 | zenlog-recent-words.pl | global-unique | perl -pe 'print "[RECENT-WORD] "'

        # Local files files
        # {
        #     if [[ -z "$token" ]]; then
        #         ffind
        #     else
        #         for tok in "$token"*; do
        #           if [[ -f "$tok" ]] ; then
        #             echo "$tok"
        #           else
        #             ffind "$tok"
        #           fi
        #         done
        #     fi
        # } | dir-slash | perl -pe 'print "[LOCAL-FILE] "'
      fi
    } 2>/dev/null |
    nobuf tr -s / /|
    nobuf tee /tmp/fzf-in.txt |
    fzf -q "$token" -m --preview='preview-file {2..}' |
      perl -pe 's!^\S+\s*!!; s!^.*\{\{\s*(.*?)\s*\}\}.*$!\1!' |
      maybe_escape |
      add-backslash-except-for-last
)

if [[ -n "$completed" ]] ; then
  sh-replace-current-token "$completed"
fi
