#!/bin/bash

. mutil.sh

adb=0

eval "$(getopt.pl -Nx '
a|adb adb=1 # Complete with android device files.
' "$@")"

token="$(readline-current-token -f)"

env_expansion=0
shescapes=shescapes

if [[ "$token" = \$* ]] ; then
  env_expansion=1
  shescapes=cat
fi

gitroot="$(git rev-parse --show-toplevel 2>/dev/null)"


completed=$(
    {
      if (( $env_expansion )) ; then
        # Env names.
        env | sed -e 's!^![ENV] $!; s!=.*!!'

      else
        if [[ -n "$gitroot" ]] ; then
          # Git branches
          git branch | sed -n '/^..(/d; s/^. /[GIT-BRANCH] /p;'
        fi

        repo-active-dirs | sort | perl -pe 'print "[REPO-DIR] "'

        if [[ -n "$gitroot" ]] ; then
          (
            cd "$gitroot"
            # Git changed files
            git status -s |
                perl -pe "
                s!^\s* A \s*![GIT-CHANGED-ADD] $gitroot/!ix;
                s!^\s* D \s*![GIT-CHANGED-DEL] $gitroot/!ix;
                s!^\s* M \s*![GIT-CHANGED-MOD] $gitroot/!ix;
                " | sort

            # Repo changed files
            rp -q |
                perl -pe "
                s!^\s* A \s*![REPO-CHANGED-ADD] $gitroot/!ix;
                s!^\s* D \s*![REPO-CHANGED-DEL] $gitroot/!ix;
                s!^\s* M \s*![REPO-CHANGED-MOD] $gitroot/!ix;
                " | sort
          )
        fi

        # Filenames in recent logs
        zenlog-recent-files -d | global-unique | dir-slash | sed 's/^/[RECENT-FILE] /'

        # Recent words in zenlog
        zenlog-last-n-contents -R -n 10 | zenlog-recent-words.pl | global-unique | perl -pe 'print "[RECENT-WORD] "'

        # Android modules
        android-module-list -q | perl -pe 'print "[AND-MODULE] "'

        # Android device files
        bash-fzf-complete-current-token-android-helper "${token}"

        # Git tags
        git tag | perl -pe 'print "[GIT-TAG] "'

        # Recent directories
        recent-dirs | perl -ne 'chomp; print "[RECENT-DIR] ", $_, "/\n"'

        # Executable files.
        list-commands-in-path | perl -pe 'print "[EXE] "'

        # Local files files
        for tok in "$token"*; do
          if [[ -f "$tok" ]] ; then
            echo "$tok"
          else
            find "$tok"
          fi
        done | dir-slash | perl -pe 'print "[LOCAL-FILE] "'
      fi
    } 2>/dev/null |
    fzf -q "$token" -m --preview='preview-file {2..}' |
      perl -pe 's!^\S+\s*!!; s!^.*\{\{\s*(.*?)\s*\}\}.*$!\1!' |
      $shescapes |
      add-backslash-except-for-last
    )

if [[ -n "$completed" ]] ; then
  readline-replace "$completed"
fi
