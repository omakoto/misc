#!/bin/bash

# Select lines, 

set -e

remove_cr_lines() {
    cat

    # Hmm, tried to remove the lines ending with a CR, but it didn't work well.
    #perl -pe 's# (^ | (?<= [ \r \n ] ) ) [^ \r \n ]*? \r (?! \n ) ##gx'
    #perl -pe 's! \x0d\x0a ! \x0a !gx'
    #perl -pe 's# (^ | (?<= [ \r \n ] ) ) [^ \r \n ]*? \r (?! \n ) ##gx ; s# \r\n # \n #gx'
#    perl -pe 's! (?<= [ \r \n ] )  [^ \r \n ]*? \r !!gx'
#    perl -pe 's! \r !!gx'
}

#actual="$(echo -n $'xxx\r\nBBB\rccc\r\nDDD\rEEE\rfff\r\n' | remove_cr_lines)" && echo "$actual" | hd

#exit 9

# Select the line
line="$( 
    zenlog-last-n-contents -r -n 10 |
    remove_cr_lines |
    tac |
    fzf -m --ansi
)"

if [[ "$line" == "" ]] ; then
    exit 1
fi

tokenize() {
    local line="$1"
    {
        # Each token
        echo "$line" | perl -pe 's!\s+!\n!g'

        # Special case: "Running: "...
        echo "$line" | sed -ne 's!^Running: !!p'

        # Whole line
        echo "$line"
    } | grep -v '^$' | fzf -1 -m --tac | tr -s '\n' ' '
}


echo "$( tokenize "$line" )"
