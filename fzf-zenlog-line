#!/bin/bash

# Select lines, 

set -e
. mutil.sh

remove_cr_lines() {
    perl -pe 's# (^ | (?<= [ \r \n ] )) [^\r\n]* \r (?! \n )  ##xg; s!\r\n!\n!xg  '
}

#actual="$(echo -n $'xxx\r\nBBB\rccc\r\nDDD\rEEE\rfff\r\n' | remove_cr_lines)" && echo "$actual" | hd

#exit 9

# Select the line
line="$( 
    zenlog-last-n-contents -r -n 20 |
    remove_cr_lines |
    tac |
    fzf -m --ansi
)"

if [[ "$line" == "" ]] ; then
    exit 1
fi

tokenize() {
    local line="$1"

    # Remove unnecessary line start tokens
    line="$( perl -pe '
#line 33

s!^Running: !!; # EE marker

s!^ \$\s+ !!x; # Prompt 

' <<<"$line" )"

    {
        split="$( perl -ne '
#line 43

# EE command line
$orig = $_;

# Remove "obvious" line start tokens
s!^ ([a-zA-Z]|\?\?) \s+ !!x; #git markers

# Split by space and print in each line
$a = s!\s+!\n!gr and print $a;

' <<<"$line" )"
        if [[ "$line" != "$split" ]]; then
            echo "$split"
            gray -f -- '--------'
        fi

        # Whole line(s)
        echo "$line"
    } | grep -v '^$' | fzf --ansi -1 -m --tac | tr -s '\n' ' '
}


echo "$( tokenize "$line" )"
