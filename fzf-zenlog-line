#!/bin/bash

# Select lines, 

set -e
. mutil.sh

# Select the line
line="$( 
    zenlog-last-n-contents -r -n 20 |
    cr-lines-remove |
    tac |
    fzf -m --ansi |
    perl -pe 's/^\s+//'
)"

if [[ "$line" == "" ]] ; then
    exit 1
fi

bar="$(gray -f -- '--------')"
export bar

col() {
    local c=$1
    awk '{ print $'$c'}'
}

same() {
    local v1="$1"
    local v2="$2"

    diff --ignore-blank-lines -q <(echo -n "$v1") <(echo -n "$v2") &>/dev/null
}

tokenize() {
    local line="$1"

    # Remove unnecessary line start tokens
    line="$( perl -pe '
#line 34

s!^Running: !!; # EE marker

s!^ \$\s+ !!x; # Prompt 

' <<<"$line" )"

    {
        # Show vertical columns
        vert="$(
            if (( "$(wc -l <<<"$line")" > 1 )); then
                for i in $(seq 1 9); do
                    c="$(col $i <<< "$line")"
                    if [[ "$c" != "" ]] ; then
                        echo "$bar"
                        echo "$(col $i <<< "$line")"
                    fi
                done
            fi
        )"

        if [[ "$vert" != "" ]] && ! same "$line" "$vert" ; then
            echo "$vert"
            echo $bar$bar$bar$bar
        fi

        split="$( perl -ne '
#line 39

chomp;

# Remove "obvious" line start tokens
s!^ ([a-zA-Z]|\?\?) \s+ !!x; #git markers

# Split by space or : and print in each line
if ($a = s![\s:]+!\n!gr) {
    print $a, "\n";
    print $ENV{bar}, "\n";
}

' <<<"$line" )"
        if [[ "$split" != "" ]] && same "$line" != "$split" ; then
            echo "${split}"
            echo $bar
        fi

        # Whole line(s)
        echo "${line}"
    } | grep -v -P '^\s*$' | uniq | fzf --ansi -1 -m --tac # | tr -s '\n' ' '
}


echo "$( tokenize "$line" )"
